{{- if .Values.postInstall.configureTTL.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "aegis-trader.fullname" . }}-fix-ttl
  labels:
    {{- include "aegis-trader.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        {{- include "aegis-trader.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: ttl-fix
    spec:
      restartPolicy: OnFailure
      containers:
      - name: fix-ttl
        image: natsio/nats-box:latest
        command:
        - sh
        - -c
        - |
          set -e
          echo "Waiting for NATS to be ready..."
          sleep 15

          echo "Checking existing streams..."
          nats stream ls -n

          # Update COMMANDS stream to enable TTL
          if nats stream info COMMANDS > /dev/null 2>&1; then
            echo "Updating COMMANDS stream to enable TTL..."
            nats stream edit COMMANDS --force --config='{"allow_msg_ttl": true}'
            echo "COMMANDS TTL status:"
            nats stream info COMMANDS --json | jq '.config.allow_msg_ttl'
          fi

          # Update EVENTS stream to enable TTL
          if nats stream info EVENTS > /dev/null 2>&1; then
            echo "Updating EVENTS stream to enable TTL..."
            nats stream edit EVENTS --force --config='{"allow_msg_ttl": true}'
            echo "EVENTS TTL status:"
            nats stream info EVENTS --json | jq '.config.allow_msg_ttl'
          fi

          # Check if service_registry KV bucket exists
          if nats stream info KV_service_registry > /dev/null 2>&1; then
            echo "Found KV_service_registry stream"

            # Get current configuration
            echo "Current stream configuration:"
            nats stream info KV_service_registry --json | jq '.config.allow_msg_ttl'

            # Check if TTL is already enabled
            TTL_ENABLED=$(nats stream info KV_service_registry --json | jq -r '.config.allow_msg_ttl')
            if [ "$TTL_ENABLED" = "true" ]; then
              echo "TTL already enabled on KV_service_registry"
            else
              # Delete and recreate with TTL support
              echo "Recreating stream with TTL support..."
              nats stream rm KV_service_registry -f

            # Create with TTL enabled using raw API
            cat <<EOF | nats req '$JS.API.STREAM.CREATE' -
          {
            "name": "KV_service_registry",
            "subjects": ["$KV.service_registry.>"],
            "retention": "limits",
            "max_msgs_per_subject": 10,
            "max_bytes": -1,
            "max_age": 0,
            "max_msg_size": 1048576,
            "storage": "file",
            "allow_direct": true,
            "allow_rollup_hdrs": true,
            "deny_delete": true,
            "deny_purge": false,
            "discard": "new",
            "allow_msg_ttl": true,
            "replicas": 1
          }
          EOF

            echo "Verifying TTL is enabled..."
            nats stream info KV_service_registry --json | jq '.config.allow_msg_ttl'

            # Recreate as KV bucket
            echo "Re-binding as KV bucket..."
            nats kv add service_registry || true
            fi
          fi

          echo "TTL configuration complete!"
        env:
        - name: NATS_URL
          value: "nats://{{ include "aegis-trader.fullname" . }}-nats:4222"
{{- end }}
