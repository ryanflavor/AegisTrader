# Default values for aegis-trader
# This is a YAML-formatted file
# Declare variables to be passed into your templates

# Global configuration
global:
  imagePullSecrets: []
  storageClass: ""
  environment: development

# Service account configuration
serviceAccount:
  create: false
  name: ""

# NATS Configuration
nats:
  enabled: true
  config:
    cluster:
      enabled: true
      replicas: 3
    jetstream:
      enabled: true
      fileStore:
        enabled: true
        dir: /data
        pvc:
          enabled: true
          size: 10Gi
          storageClassName: ""
      memoryStore:
        enabled: false
        maxSize: 1Gi
  container:
    env:
      GOMEMLIMIT: 7GiB
    merge:
      resources:
        requests:
          cpu: "1"
          memory: 4Gi
        limits:
          cpu: "2"
          memory: 8Gi
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        runAsUser: 1000
        capabilities:
          drop:
            - ALL
  service:
    type: ClusterIP
  podTemplate:
    merge:
      spec:
        securityContext:
          fsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
    topologySpreadConstraints:
      kubernetes.io/hostname:
        maxSkew: 1
        whenUnsatisfiable: DoNotSchedule
  promExporter:
    enabled: false

# Monitor API Configuration
monitor-api:
  enabled: true
  replicaCount: 1
  image:
    repository: aegistrader-monitor-api
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    port: 8100
  containerPort: 8100
  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  configMap:
    data:
      API_PORT: "8100"
      NATS_URL: "nats://aegis-trader-nats:4222"
      NATS_KV_BUCKET: "service-registry"
  initContainers:
    - name: wait-for-nats
      image: busybox:1.36
      command: ['sh', '-c']
      args: ['until nc -z aegis-trader-nats 4222; do echo "Waiting for NATS..."; sleep 2; done']
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits:
          cpu: 50m
          memory: 64Mi

# Monitor UI Configuration
monitor-ui:
  enabled: true
  replicaCount: 1
  image:
    repository: aegistrader-monitor-ui
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 3200  # Changed to avoid conflict with existing deployment
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 500m
      memory: 1Gi

# Trading Services Configuration
order-service:
  enabled: true
  replicaCount: 3
  image:
    repository: aegistrader-trading-service
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 8080
  containerPort: 8080
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3
  autoscaling:
    enabled: false
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  env:
    - name: SERVICE_TYPE
      value: "ORDER"
    - name: NATS_URL
      value: "nats://aegis-trader-nats:4222"
    - name: SERVICE_NAME
      value: "order-service"
    - name: LOG_LEVEL
      value: "INFO"
    - name: PYTHONUNBUFFERED
      value: "1"
  initContainers:
    - name: wait-for-nats
      image: busybox:1.36
      command: ['sh', '-c']
      args: ['until nc -z aegis-trader-nats 4222; do echo "Waiting for NATS..."; sleep 2; done']
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits:
          cpu: 50m
          memory: 64Mi

pricing-service:
  enabled: true
  replicaCount: 2
  image:
    repository: aegistrader-trading-service
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 8080
  containerPort: 8080
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  env:
    - name: SERVICE_TYPE
      value: "PRICING"
    - name: NATS_URL
      value: "nats://aegis-trader-nats:4222"
    - name: SERVICE_NAME
      value: "pricing-service"
    - name: LOG_LEVEL
      value: "INFO"
    - name: PYTHONUNBUFFERED
      value: "1"
  initContainers:
    - name: wait-for-nats
      image: busybox:1.36
      command: ['sh', '-c']
      args: ['until nc -z aegis-trader-nats 4222; do echo "Waiting for NATS..."; sleep 2; done']
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits:
          cpu: 50m
          memory: 64Mi

risk-service:
  enabled: true
  replicaCount: 2
  image:
    repository: aegistrader-trading-service
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 8080
  containerPort: 8080
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  env:
    - name: SERVICE_TYPE
      value: "RISK"
    - name: NATS_URL
      value: "nats://aegis-trader-nats:4222"
    - name: SERVICE_NAME
      value: "risk-service"
    - name: LOG_LEVEL
      value: "INFO"
    - name: PYTHONUNBUFFERED
      value: "1"
  initContainers:
    - name: wait-for-nats
      image: busybox:1.36
      command: ['sh', '-c']
      args: ['until nc -z aegis-trader-nats 4222; do echo "Waiting for NATS..."; sleep 2; done']
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits:
          cpu: 50m
          memory: 64Mi

# Post-install configuration
postInstall:
  createKvBucket:
    enabled: true
    bucketName: service-registry
