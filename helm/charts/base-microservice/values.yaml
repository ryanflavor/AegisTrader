# Default values for base-microservice
# This is a YAML-formatted file
# Declare variables to be passed into your templates

# Basic service configuration
replicaCount: 1

image:
  repository: ""  # Must be overridden
  pullPolicy: IfNotPresent
  tag: ""  # Defaults to Chart.appVersion

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Service account configuration
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Pod configuration
podAnnotations: {}
podLabels: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true

# Service configuration
service:
  type: ClusterIP
  port: 8080
  targetPort: http
  protocol: TCP
  name: http

# Container configuration
containerPort: 8080
containerPortName: http

# Environment variables
env: []
  # - name: FOO
  #   value: "bar"

envFrom: []
  # - configMapRef:
  #     name: config

# ConfigMap configuration
configMap:
  enabled: true
  data: {}

# Resource limits
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Probes configuration
livenessProbe:
  enabled: true
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  enabled: true
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

startupProbe:
  enabled: false
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 30

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Node selection
nodeSelector: {}
tolerations: []
affinity: {}

# Init containers
initContainers: []
  # - name: wait-for-service
  #   image: busybox:1.36
  #   command: ['sh', '-c', 'until nc -z service-name 4222; do sleep 1; done']

# Volume mounts
volumeMounts: []
  # - name: data
  #   mountPath: /data

volumes: []
  # - name: data
  #   emptyDir: {}

# Application-specific configuration
app:
  # Type of service (used for trading services)
  serviceType: ""
  # Additional application configuration
  config: {}
